{"version":3,"sources":["utils.js","lib/helpers/serializer.js","lib/helpers/retry.js","lib/WebRTC.js","lib/Channel.js","lib/MultiChannel.js","lib/index.js","lib/stores/FreeStore.js","screens/Create.js","screens/Join.js","screens/Chat.js","App.js","index.js"],"names":["utils","window","location","href","replace","hash","search","querystring","parse","serializer","description","btoa","sdp","token","type","atob","retry","obj","key","func","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","stop","WebRTC","config","classCallCheck","this","connection","_createConnection","dataChannel","createDataChannel","createOffer","offer","setLocalDescription","Error","setRemoteDescription","createAnswer","answer","channel","store","get","sessionDescription","_getAnswerToken","_getSessionDescription","save","onopen","connect","oniceconnectionstatechange","e","state","iceConnectionState","isDisconnected","isConnected","disconnect","_this","_callee7","_context7","getAnswer","sent","RTCPeerConnection","iceServers","Promise","resolve","onicecandidate","candidate","localDescription","Channel","arguments","length","undefined","uuid","possibleConstructorReturn","getPrototypeOf","call","data","_checkConnected","send","wasConnected","close","$waitAnswer","emit","_this2","_checkNotConnected","onmessage","event","handler","esm_get","prototype","EventEmitter","MultiChannel","channel1","channel2","_handleConnection","bind","assertThisInitialized","_handleDisconnection","_handleData","selectedChannel","_subscribeChannel","_clean","getOtherChannel","_this3","on","otherChannel","$waitChannel2","url","encodeURIComponent","encodedUrl","apiUrl","_getCallUrl","concat","axios","then","_adaptResponse","JSON","request","decodeURIComponent","response","status","http_code","contents","route","urls","webrtc","lib","createChannel","_createChannel","_callee2","_context2","createSingleChannel","joinSingleChannel","abrupt","apply","joinChannel","_joinChannel","_callee3","_context3","_x","_createSingleChannel","_callee4","id","_ref2","_context4","createConnectionWithOffer","saveOffer","setConnectHandler","setDisconnectHandler","setWaitHandler","_x2","_joinSingleChannel","_callee5","_context5","getOffer","createConnectionWithAnswer","saveAnswer","ondatachannel","_ref3","_x3","setStore","newStore","setIceServers","newIceServers","Create","react_default","createElement","link","quickp2p","setState","Component","Join","inviteToken","Chat","messages","input","value","join","readOnly","rows","ref","textarea","style","width","onChange","target","onKeyDown","_addMessage","alert","focus","content","_this4","toConsumableArray","scrollTop","scrollHeight","App","startsWith","Create_Create","Join_Join","Chat_Chat","rel","_listener","addEventListener","forceUpdate","removeEventListener","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.65d35c2d.chunk.js","sourcesContent":["import querystring from \"querystring\";\n\nexport default {\n\tgetBaseUrl() {\n\t\treturn window.location.href\n\t\t\t.replace(window.location.hash, \"\")\n\t\t\t.replace(window.location.search, \"\");\n\t},\n\tgetQueryString() {\n\t\treturn querystring.parse(window.location.search.replace(\"?\", \"\"));\n\t}\n};\n","export default {\n\tserialize(description) {\n\t\treturn btoa(description.sdp);\n\t},\n\n\tdeserialize(token, type) {\n\t\treturn { type, sdp: atob(token) };\n\t}\n};\n","export default (obj, key, func) => {\n\tobj[key] = async () => {\n\t\ttry {\n\t\t\tawait func();\n\t\t} catch (e) {\n\t\t\tif (obj[key]) obj[key]();\n\t\t}\n\t};\n\tobj[key]();\n};\n","import serializer from \"./helpers/serializer\";\nimport retry from \"./helpers/retry\";\n\nconst CHANNEL_NAME = \"data\";\nconst ANSWER_SUFFIX = \"-answer\";\n\nexport default class WebRTC {\n\tconstructor(config) {\n\t\tthis.config = config;\n\t}\n\n\tasync createConnectionWithOffer() {\n\t\ttry {\n\t\t\tconst connection = this._createConnection();\n\t\t\tconst dataChannel = connection.createDataChannel(CHANNEL_NAME);\n\t\t\tconst offer = await connection.createOffer();\n\t\t\tawait connection.setLocalDescription(offer);\n\t\t\treturn { connection, dataChannel };\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create offer\");\n\t\t}\n\t}\n\n\tasync createConnectionWithAnswer(offer) {\n\t\ttry {\n\t\t\tconst connection = this._createConnection();\n\t\t\tawait connection.setRemoteDescription(offer);\n\t\t\tconst answer = await connection.createAnswer();\n\t\t\tawait connection.setLocalDescription(answer);\n\t\t\treturn connection;\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create answer\");\n\t\t}\n\t}\n\n\tasync getOffer(channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this.store.get(channel.token);\n\t\t\treturn serializer.deserialize(sessionDescription, \"offer\");\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error joining channel: Cannot read offer data\");\n\t\t}\n\t}\n\n\tasync getAnswer(channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this.store.get(\n\t\t\t\tthis._getAnswerToken(channel)\n\t\t\t);\n\t\t\treturn serializer.deserialize(sessionDescription, \"answer\");\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error joining channel: Cannot read answer data\");\n\t\t}\n\t}\n\n\tasync saveOffer(connection, channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\n\t\t\tawait this.store.save(channel.token, sessionDescription);\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write offer data\");\n\t\t}\n\t}\n\n\tasync saveAnswer(connection, channel) {\n\t\ttry {\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\n\t\t\tawait this.store.save(this._getAnswerToken(channel), sessionDescription);\n\t\t} catch (e) {\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write answer data\");\n\t\t}\n\t}\n\n\tsetConnectHandler(connection, dataChannel, channel) {\n\t\tdataChannel.onopen = () => channel.connect(connection, dataChannel);\n\t}\n\n\tsetDisconnectHandler(connection, channel) {\n\t\tconnection.oniceconnectionstatechange = (e) => {\n\t\t\tconst state = connection.iceConnectionState;\n\t\t\tconst isDisconnected =\n\t\t\t\tstate === \"failed\" || state === \"disconnected\" || state === \"closed\";\n\t\t\tif (channel.isConnected && isDisconnected) channel.disconnect();\n\t\t};\n\t}\n\n\tsetWaitHandler(connection, channel) {\n\t\tretry(channel, \"$waitAnswer\", async () => {\n\t\t\tconst answer = await this.getAnswer(channel);\n\t\t\tawait connection.setRemoteDescription(answer);\n\t\t});\n\t}\n\n\tget store() {\n\t\treturn this.config.store;\n\t}\n\n\t_createConnection() {\n\t\treturn new RTCPeerConnection({ iceServers: this.config.iceServers });\n\t}\n\n\t_getSessionDescription(connection) {\n\t\treturn new Promise((resolve) => {\n\t\t\tconnection.onicecandidate = (e) => {\n\t\t\t\tif (e.candidate !== null) return;\n\t\t\t\tresolve(serializer.serialize(connection.localDescription));\n\t\t\t};\n\t\t});\n\t}\n\n\t_getAnswerToken(channel) {\n\t\treturn channel.token + ANSWER_SUFFIX;\n\t}\n}\n","import EventEmitter from \"eventemitter3\";\nimport uuid from \"uuid/v1\";\n\nexport default class Channel extends EventEmitter {\n\tconstructor(token = uuid()) {\n\t\tsuper();\n\n\t\tthis.token = token;\n\t\tthis.connection = null;\n\t\tthis.dataChannel = null;\n\t}\n\n\tsend(data) {\n\t\tthis._checkConnected();\n\n\t\tthis.dataChannel.send(data);\n\t}\n\n\tdisconnect() {\n\t\tconst wasConnected = this.isConnected;\n\t\tif (this.dataChannel) this.dataChannel.close();\n\t\tif (this.connection) this.connection.close();\n\n\t\tthis.connection = null;\n\t\tthis.dataChannel = null;\n\t\tthis.$waitAnswer = null;\n\t\tif (wasConnected) this.emit(\"disconnected\");\n\t}\n\n\tconnect(connection, dataChannel) {\n\t\tthis._checkNotConnected();\n\n\t\tthis.connection = connection;\n\t\tthis.dataChannel = dataChannel;\n\t\tthis.dataChannel.onmessage = (e) => {\n\t\t\tconst data = e.data;\n\t\t\tif (!data) return;\n\n\t\t\tthis.emit(\"data\", data);\n\t\t};\n\t\tthis.emit(\"connected\");\n\t}\n\n\ton(event, handler) {\n\t\tif (event === \"connected\" && this.isConnected) handler();\n\t\treturn super.on(event, handler);\n\t}\n\n\tget isConnected() {\n\t\treturn this.dataChannel !== null;\n\t}\n\n\t_checkConnected() {\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\n\t}\n\n\t_checkNotConnected() {\n\t\tif (this.isConnected) throw new Error(\"Error: Already connected\");\n\t}\n}\n","import EventEmitter from \"eventemitter3\";\n\nexport default class MultiChannel extends EventEmitter {\n\tconstructor(channel1, channel2) {\n\t\tsuper();\n\n\t\tthis._handleConnection = this._handleConnection.bind(this);\n\t\tthis._handleDisconnection = this._handleDisconnection.bind(this);\n\t\tthis._handleData = this._handleData.bind(this);\n\n\t\tthis.channel1 = channel1;\n\t\tthis.channel2 = null;\n\t\tthis.selectedChannel = null;\n\n\t\tthis._subscribeChannel(this.channel1, () => this.channel2);\n\t\tif (channel2) this.connect(channel2);\n\t}\n\n\tsend(data) {\n\t\tthis._checkConnected();\n\n\t\tthis.selectedChannel.send(data);\n\t}\n\n\tdisconnect() {\n\t\tthis.channel1.disconnect();\n\t\tif (this.channel2) this.channel2.disconnect();\n\t\tthis._clean();\n\t}\n\n\tconnect(channel2) {\n\t\tthis.channel2 = channel2;\n\t\tthis._subscribeChannel(this.channel2, () => this.channel1);\n\t}\n\n\ton(event, handler) {\n\t\tif (event === \"connected\" && this.isConnected) handler();\n\t\treturn super.on(event, handler);\n\t}\n\n\tget token() {\n\t\treturn this.channel1.token;\n\t}\n\n\tget isConnected() {\n\t\treturn this.selectedChannel !== null;\n\t}\n\n\t_checkConnected() {\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\n\t}\n\n\t_subscribeChannel(channel, getOtherChannel) {\n\t\tchannel\n\t\t\t.on(\"connected\", () => {\n\t\t\t\tthis._handleConnection(channel);\n\t\t\t})\n\t\t\t.on(\"disconnected\", () => {\n\t\t\t\tthis._handleDisconnection(channel, getOtherChannel());\n\t\t\t})\n\t\t\t.on(\"data\", this._handleData);\n\t}\n\n\t_handleConnection(channel) {\n\t\tif (this.isConnected) return;\n\n\t\tthis.selectedChannel = channel;\n\t\tthis.emit(\"connected\");\n\t}\n\n\t_handleDisconnection(channel, otherChannel) {\n\t\tconst wasConnected = this.isConnected;\n\n\t\tif (otherChannel && otherChannel.isConnected)\n\t\t\tthis.selectedChannel = otherChannel;\n\t\telse if (wasConnected) {\n\t\t\tthis._clean();\n\t\t\tthis.emit(\"disconnected\");\n\t\t}\n\t}\n\n\t_handleData(data) {\n\t\tthis.emit(\"data\", data);\n\t}\n\n\t_clean() {\n\t\tthis.selectedChannel = null;\n\t\tthis.$waitChannel2 = null;\n\t}\n}\n","import WebRTC from \"./WebRTC\";\nimport Channel from \"./Channel\";\nimport MultiChannel from \"./MultiChannel\";\nimport FreeStore from \"./stores/FreeStore\";\nimport retry from \"./helpers/retry\";\n\nconst CHANNEL2_SUFFIX = \"-2\";\nconst config = {\n\tstore: FreeStore,\n\ticeServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n};\nconst webrtc = new WebRTC(config);\n\nexport default {\n\tasync createChannel() {\n\t\tconst channel1 = await this.createSingleChannel();\n\t\tconst channel = new MultiChannel(channel1);\n\n\t\tretry(channel, \"$waitChannel2\", async () => {\n\t\t\tconst channel2 = await this.joinSingleChannel(\n\t\t\t\tchannel.token + CHANNEL2_SUFFIX\n\t\t\t);\n\t\t\tchannel.connect(channel2);\n\t\t});\n\n\t\treturn channel;\n\t},\n\n\tasync joinChannel(token) {\n\t\tconst channel1 = await this.joinSingleChannel(token);\n\t\tconst channel2 = await this.createSingleChannel(token + CHANNEL2_SUFFIX);\n\n\t\treturn new MultiChannel(channel1, channel2);\n\t},\n\n\tasync createSingleChannel(id) {\n\t\tconst channel = new Channel(id);\n\n\t\tconst {\n\t\t\tconnection,\n\t\t\tdataChannel\n\t\t} = await webrtc.createConnectionWithOffer();\n\t\tawait webrtc.saveOffer(connection, channel);\n\n\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\n\t\twebrtc.setDisconnectHandler(connection, channel);\n\t\twebrtc.setWaitHandler(connection, channel);\n\n\t\treturn channel;\n\t},\n\n\tasync joinSingleChannel(token) {\n\t\tconst channel = new Channel(token);\n\n\t\tconst offer = await webrtc.getOffer(channel);\n\t\tconst connection = await webrtc.createConnectionWithAnswer(offer);\n\t\tawait webrtc.saveAnswer(connection, channel);\n\n\t\tconnection.ondatachannel = ({ channel: dataChannel }) => {\n\t\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\n\t\t};\n\t\twebrtc.setDisconnectHandler(connection, channel);\n\n\t\treturn channel;\n\t},\n\n\tsetStore(newStore) {\n\t\tconfig.store = newStore;\n\t},\n\n\tsetIceServers(newIceServers) {\n\t\tconfig.iceServers = newIceServers;\n\t}\n};\n","import axios from \"axios\";\n\nconst PROXY = \"https://api.allorigins.win/get?url=\";\nconst SHORTENER = \"https://tinyurl.com\";\nconst ECHO = \"http://scooterlabs.com/echo.json?data=\";\n\nexport default {\n\tsave(key, data) {\n\t\tconst url = ECHO + encodeURIComponent(data);\n\t\tconst encodedUrl = encodeURIComponent(url);\n\t\tconst apiUrl = this._getCallUrl(\n\t\t\t`/create.php?url=${encodedUrl}&alias=${key}&submit=Make%20TinyURL!`\n\t\t);\n\n\t\treturn axios.get(apiUrl).then(this._adaptResponse);\n\t},\n\n\tget(key) {\n\t\treturn axios\n\t\t\t.get(this._getCallUrl(`/${key}`))\n\t\t\t.then(this._adaptResponse)\n\t\t\t.then((data) => JSON.parse(data).request.data)\n\t\t\t.then((url) => decodeURIComponent(url));\n\t},\n\n\t_adaptResponse(response) {\n\t\tconst { data } = response;\n\t\tif (!data.status || data.status.http_code !== 200)\n\t\t\tthrow new Error(\"Request failed\");\n\t\treturn data.contents;\n\t},\n\n\t_getCallUrl(route) {\n\t\treturn PROXY + encodeURIComponent(SHORTENER + route);\n\t}\n};\n","import React, { Component } from \"react\";\nimport utils from \"../utils\";\nimport quickp2p from \"../lib\";\n\nexport default class Create extends Component {\n\tstate = { token: null };\n\n\trender() {\n\t\tif (!this.state.token) return <div>Wait...</div>;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tSend this link to your peer and wait...\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<a href={this.link}>{this.link}</a>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync componentDidMount() {\n\t\tif (window.channel) window.channel.disconnect();\n\n\t\twindow.channel = this.channel = await quickp2p.createChannel();\n\t\tthis.setState({ token: this.channel.token });\n\n\t\tthis.channel.on(\"connected\", () => {\n\t\t\twindow.location.hash = \"#/chat\";\n\t\t});\n\t}\n\n\tget link() {\n\t\tconst url = utils.getBaseUrl();\n\t\treturn `${url}?token=${this.state.token}#/join`;\n\t}\n}\n","import React, { Component } from \"react\";\nimport utils from \"../utils\";\nimport quickp2p from \"../lib\";\n\nexport default class Join extends Component {\n\trender() {\n\t\tif (!this.inviteToken) return <div>Invalid token.</div>;\n\n\t\treturn <div>Wait...</div>;\n\t}\n\n\tasync componentDidMount() {\n\t\tif (!this.inviteToken) return;\n\t\tif (window.channel) window.channel.disconnect();\n\n\t\twindow.channel = this.channel = await quickp2p.joinChannel(\n\t\t\tthis.inviteToken\n\t\t);\n\n\t\tthis.channel.on(\"connected\", () => {\n\t\t\twindow.channel = this.channel;\n\t\t\twindow.location.hash = \"#/chat\";\n\t\t});\n\t}\n\n\tget inviteToken() {\n\t\treturn utils.getQueryString().token || null;\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class Chat extends Component {\n\tstate = { messages: [], input: \"\" };\n\n\trender() {\n\t\tif (!window.channel) return <div>No connection.</div>;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<textarea\n\t\t\t\t\tvalue={this.state.messages.join(\"\\n\")}\n\t\t\t\t\treadOnly\n\t\t\t\t\trows={15}\n\t\t\t\t\tref={(textarea) => (this.textarea = textarea)}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.input}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.setState({ input: e.target.value });\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\t\twindow.channel.send(this.state.input);\n\t\t\t\t\t\t\tthis.setState({ input: \"\" });\n\t\t\t\t\t\t\tthis._addMessage(`Me: ${this.state.input}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tref={(input) => (this.input = input)}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst channel = window.channel;\n\t\tif (!channel) return;\n\n\t\tchannel.on(\"data\", (data) => {\n\t\t\tthis._addMessage(`Stranger: ${data}`);\n\t\t});\n\n\t\tchannel.on(\"disconnected\", () => {\n\t\t\talert(\"DISCONNECTED!\");\n\t\t\twindow.location.hash = \"#/\";\n\t\t});\n\n\t\tthis.input.focus();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (!window.channel) return;\n\n\t\twindow.channel.disconnect();\n\t\twindow.channel = undefined;\n\t}\n\n\t_addMessage(content) {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tmessages: [...this.state.messages, content]\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.textarea.scrollTop = this.textarea.scrollHeight;\n\t\t\t}\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport Create from \"./screens/Create\";\nimport Join from \"./screens/Join\";\nimport Chat from \"./screens/Chat\";\n\nexport default class App extends Component {\n\trender() {\n\t\tconst route = window.location.hash;\n\n\t\tif (route.startsWith(\"#/create\")) return <Create />;\n\t\tif (route.startsWith(\"#/join\")) return <Join />;\n\t\tif (route.startsWith(\"#/chat\")) return <Chat />;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Valid urls:</h1>\n\t\t\t\t/#/create\n\t\t\t\t<br />\n\t\t\t\t/#/join?token=INVITE_TOKEN\n\t\t\t\t<br />\n\t\t\t\t<br />>{\" \"}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/rodri042/quickp2p\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tSource code and instructions\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis._listener = window.addEventListener(\"hashchange\", (e) => {\n\t\t\tthis.forceUpdate();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"hashchange\", this._listener);\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}